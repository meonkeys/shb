---
# Ansible will automatically create parent directories. When we we mention each
# parent explicitly it is to ensure owner and group are consistent.

- name: Create root-owned service directories
  file:
    path: "{{ item }}"
    state: directory
  with_items:
    - /data
    - /data/nextcloud
    - /data/nextcloud/db
    - /data/nextcloud/root
    - /data/traefik
    - /data/traefik/etc
    - /data/wallabag
    - /root/ops
    - /root/ops/jellyfin
    - /root/ops/nextcloud
    - /root/ops/scratch
    - /root/ops/scratch/custom
    - /root/ops/traefik
    - /root/ops/wallabag
    - /root/ops/watchtower

- name: Process and sync service configs
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
  loop:
    - { src: 'ops/jellyfin/compose.yml', dest: '/root/ops/jellyfin/compose.yml' }
    - { src: 'ops/nextcloud/compose.yml', dest: '/root/ops/nextcloud/compose.yml' }
    - { src: 'ops/scratch/compose.yml', dest: '/root/ops/scratch/compose.yml' }
    - { src: 'ops/scratch/custom/Dockerfile', dest: '/root/ops/scratch/custom/Dockerfile' }
    - { src: 'ops/scratch/custom/webpack.config.js', dest: '/root/ops/scratch/custom/webpack.config.js' }
    - { src: 'ops/traefik/compose.yml', dest: '/root/ops/traefik/compose.yml' }
    - { src: 'ops/wallabag/compose.yml', dest: '/root/ops/wallabag/compose.yml' }
    - { src: 'ops/watchtower/compose.yml', dest: '/root/ops/watchtower/compose.yml' }

- name: Create jellyfin group
  group:
    name: "{{ jellyfin_group }}"
    gid: "{{ jellyfin_gid }}"

- name: Create jellyfin user
  user:
    name: jellyfin
    home: /data/jellyfin/home
    password_lock: yes
    uid: "{{ jellyfin_uid }}"
    group: "{{ jellyfin_group }}"
    shell: /usr/sbin/nologin

- name: Create jellyfin-owned directories
  file:
    path: "{{ item }}"
    owner: "{{ jellyfin_user }}"
    group: "{{ jellyfin_group }}"
    state: directory
  with_items:
    - /data/jellyfin/home
    - /data/jellyfin/config

- name: Create Wallabag-owned directories
  file:
    path: "{{ item }}"
    owner: "{{ wallabag_user }}"
    group: "{{ wallabag_group }}"
    state: directory
  with_items:
    - /data/wallabag/images
    - /data/wallabag/main
    - /data/wallabag/main/db

- name: Create Wallabag db
  copy:
    content: ""
    dest: /data/wallabag/main/db/wallabag.sqlite
    force: false
    owner: "{{ wallabag_user }}"
    group: "{{ wallabag_group }}"

- name: Create Nextcloud-owned shared media directories
  file:
    path: "{{ item }}"
    owner: "{{ nextcloud_user }}"
    group: "{{ nextcloud_group }}"
    state: directory
  with_items:
    - /data/shared/media/video
    - /data/shared/media/music

# for Jellyfin.
# See https://jellyfin.org/docs/general/administration/troubleshooting.html#real-time-monitoring
# The number is large yet, at the time of writing, not as large as recommended
# in the jellyfin documentation. I'm just trying to be conservative. I also
# tried to pick a sorta unique number in case I want it to stand out later
# during a search.
- name: increase inotify limits
  sysctl:
    name: fs.inotify.max_user_watches
    value: '233118'

- name: Check if Nextcloud config file exists
  stat:
    path: /data/nextcloud/root/config/config.php
  register: nextcloud_config

- name: Install PHP lint script
  copy:
    src: php-lint.sh
    dest: /usr/local/bin/php-lint.sh
    owner: root
    group: root
    mode: 0755

# 'CONFIG = array' below is an arbitrary choice, it's just something that always
# should exist in the Nextcloud config file

- name: Add phone region to Nextcloud config
  lineinfile:
    path: /data/nextcloud/root/config/config.php
    regexp: 'default_phone_region'
    line: "  'default_phone_region' => '{{ lookup('env', 'DEFAULT_PHONE_REGION') }}',"
    insertafter: 'CONFIG = array'
    validate: /usr/local/bin/php-lint.sh %s
  when: nextcloud_config.stat.exists

- name: Define arbitrary maintenance window
  lineinfile:
    path: /data/nextcloud/root/config/config.php
    regexp: 'maintenance_window_start'
    line: "  'maintenance_window_start' => 100,"
    insertafter: 'CONFIG = array'
    validate: /usr/local/bin/php-lint.sh %s
  when: nextcloud_config.stat.exists

- name: Install docker-compose shortcut script
  copy:
    src: dc.sh
    dest: /usr/local/sbin/dc
    owner: root
    group: root
    mode: 0755

- name: Install dc Bash completion
  copy:
    src: dc-bash-completion
    dest: /usr/share/bash-completion/completions/dc
    owner: root
    group: root
    mode: 0644
